// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module sssp_kernel_0_PE_kernel_Pipeline_write_distances (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        zext_ln49,
        local_out_address0,
        local_out_ce0,
        local_out_we0,
        local_out_d0,
        distance_buffer_0_3_reload,
        distance_buffer_1_3_reload,
        distance_buffer_2_3_reload,
        distance_buffer_3_3_reload,
        distance_buffer_4_3_reload,
        distance_buffer_5_3_reload,
        distance_buffer_6_3_reload,
        distance_buffer_7_3_reload,
        distance_buffer_8_3_reload,
        distance_buffer_9_3_reload,
        distance_buffer_10_3_reload,
        distance_buffer_11_3_reload,
        distance_buffer_12_3_reload,
        distance_buffer_13_3_reload,
        distance_buffer_14_3_reload,
        distance_buffer_15_3_reload,
        distance_buffer_16_3_reload,
        distance_buffer_17_3_reload,
        distance_buffer_18_3_reload,
        distance_buffer_19_3_reload,
        distance_buffer_20_3_reload,
        distance_buffer_21_3_reload,
        distance_buffer_22_3_reload,
        distance_buffer_23_3_reload,
        distance_buffer_24_3_reload,
        distance_buffer_25_3_reload,
        distance_buffer_26_3_reload,
        distance_buffer_27_3_reload,
        distance_buffer_28_3_reload,
        distance_buffer_29_3_reload,
        distance_buffer_30_3_reload,
        distance_buffer_31_3_reload
);

parameter    ap_ST_fsm_state1 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [11:0] zext_ln49;
output  [11:0] local_out_address0;
output   local_out_ce0;
output   local_out_we0;
output  [31:0] local_out_d0;
input  [31:0] distance_buffer_0_3_reload;
input  [31:0] distance_buffer_1_3_reload;
input  [31:0] distance_buffer_2_3_reload;
input  [31:0] distance_buffer_3_3_reload;
input  [31:0] distance_buffer_4_3_reload;
input  [31:0] distance_buffer_5_3_reload;
input  [31:0] distance_buffer_6_3_reload;
input  [31:0] distance_buffer_7_3_reload;
input  [31:0] distance_buffer_8_3_reload;
input  [31:0] distance_buffer_9_3_reload;
input  [31:0] distance_buffer_10_3_reload;
input  [31:0] distance_buffer_11_3_reload;
input  [31:0] distance_buffer_12_3_reload;
input  [31:0] distance_buffer_13_3_reload;
input  [31:0] distance_buffer_14_3_reload;
input  [31:0] distance_buffer_15_3_reload;
input  [31:0] distance_buffer_16_3_reload;
input  [31:0] distance_buffer_17_3_reload;
input  [31:0] distance_buffer_18_3_reload;
input  [31:0] distance_buffer_19_3_reload;
input  [31:0] distance_buffer_20_3_reload;
input  [31:0] distance_buffer_21_3_reload;
input  [31:0] distance_buffer_22_3_reload;
input  [31:0] distance_buffer_23_3_reload;
input  [31:0] distance_buffer_24_3_reload;
input  [31:0] distance_buffer_25_3_reload;
input  [31:0] distance_buffer_26_3_reload;
input  [31:0] distance_buffer_27_3_reload;
input  [31:0] distance_buffer_28_3_reload;
input  [31:0] distance_buffer_29_3_reload;
input  [31:0] distance_buffer_30_3_reload;
input  [31:0] distance_buffer_31_3_reload;

reg ap_idle;
reg local_out_ce0;
reg local_out_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_block_state1_pp0_stage0_iter0;
wire   [0:0] icmp_ln47_fu_323_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [63:0] zext_ln49_2_fu_345_p1;
reg   [5:0] j_fu_100;
wire    ap_loop_init;
reg   [5:0] ap_sig_allocacmp_j_1;
wire   [5:0] add_ln47_fu_329_p2;
wire   [31:0] tmp_32_fu_354_p34;
wire   [11:0] zext_ln49_1_fu_335_p1;
wire   [11:0] add_ln49_fu_339_p2;
wire   [4:0] tmp_32_fu_354_p33;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_done_reg = 1'b0;
end

sssp_kernel_0_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U538(
    .din0(distance_buffer_0_3_reload),
    .din1(distance_buffer_1_3_reload),
    .din2(distance_buffer_2_3_reload),
    .din3(distance_buffer_3_3_reload),
    .din4(distance_buffer_4_3_reload),
    .din5(distance_buffer_5_3_reload),
    .din6(distance_buffer_6_3_reload),
    .din7(distance_buffer_7_3_reload),
    .din8(distance_buffer_8_3_reload),
    .din9(distance_buffer_9_3_reload),
    .din10(distance_buffer_10_3_reload),
    .din11(distance_buffer_11_3_reload),
    .din12(distance_buffer_12_3_reload),
    .din13(distance_buffer_13_3_reload),
    .din14(distance_buffer_14_3_reload),
    .din15(distance_buffer_15_3_reload),
    .din16(distance_buffer_16_3_reload),
    .din17(distance_buffer_17_3_reload),
    .din18(distance_buffer_18_3_reload),
    .din19(distance_buffer_19_3_reload),
    .din20(distance_buffer_20_3_reload),
    .din21(distance_buffer_21_3_reload),
    .din22(distance_buffer_22_3_reload),
    .din23(distance_buffer_23_3_reload),
    .din24(distance_buffer_24_3_reload),
    .din25(distance_buffer_25_3_reload),
    .din26(distance_buffer_26_3_reload),
    .din27(distance_buffer_27_3_reload),
    .din28(distance_buffer_28_3_reload),
    .din29(distance_buffer_29_3_reload),
    .din30(distance_buffer_30_3_reload),
    .din31(distance_buffer_31_3_reload),
    .din32(tmp_32_fu_354_p33),
    .dout(tmp_32_fu_354_p34)
);

sssp_kernel_0_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((icmp_ln47_fu_323_p2 == 1'd0)) begin
            j_fu_100 <= add_ln47_fu_329_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j_fu_100 <= 6'd0;
        end
    end
end

always @ (*) begin
    if ((ap_start_int == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln47_fu_323_p2 == 1'd1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_sig_allocacmp_j_1 = 6'd0;
    end else begin
        ap_sig_allocacmp_j_1 = j_fu_100;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        local_out_ce0 = 1'b1;
    end else begin
        local_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln47_fu_323_p2 == 1'd0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        local_out_we0 = 1'b1;
    end else begin
        local_out_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln47_fu_329_p2 = (ap_sig_allocacmp_j_1 + 6'd1);

assign add_ln49_fu_339_p2 = (zext_ln49 + zext_ln49_1_fu_335_p1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start_int == 1'b0);
end

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign icmp_ln47_fu_323_p2 = ((ap_sig_allocacmp_j_1 == 6'd32) ? 1'b1 : 1'b0);

assign local_out_address0 = zext_ln49_2_fu_345_p1;

assign local_out_d0 = tmp_32_fu_354_p34;

assign tmp_32_fu_354_p33 = ap_sig_allocacmp_j_1[4:0];

assign zext_ln49_1_fu_335_p1 = ap_sig_allocacmp_j_1;

assign zext_ln49_2_fu_345_p1 = add_ln49_fu_339_p2;

endmodule //sssp_kernel_0_PE_kernel_Pipeline_write_distances
