-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
-- Version: 2021.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity sssp_kernel_0_PE_kernel_Pipeline_init_distances is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    zext_ln27 : IN STD_LOGIC_VECTOR (11 downto 0);
    local_in_a_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    local_in_a_ce0 : OUT STD_LOGIC;
    local_in_a_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    distance_buffer_31_0_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    distance_buffer_31_0_out_ap_vld : OUT STD_LOGIC;
    distance_buffer_30_0_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    distance_buffer_30_0_out_ap_vld : OUT STD_LOGIC;
    distance_buffer_29_0_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    distance_buffer_29_0_out_ap_vld : OUT STD_LOGIC;
    distance_buffer_28_0_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    distance_buffer_28_0_out_ap_vld : OUT STD_LOGIC;
    distance_buffer_27_0_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    distance_buffer_27_0_out_ap_vld : OUT STD_LOGIC;
    distance_buffer_26_0_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    distance_buffer_26_0_out_ap_vld : OUT STD_LOGIC;
    distance_buffer_25_0_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    distance_buffer_25_0_out_ap_vld : OUT STD_LOGIC;
    distance_buffer_24_0_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    distance_buffer_24_0_out_ap_vld : OUT STD_LOGIC;
    distance_buffer_23_0_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    distance_buffer_23_0_out_ap_vld : OUT STD_LOGIC;
    distance_buffer_22_0_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    distance_buffer_22_0_out_ap_vld : OUT STD_LOGIC;
    distance_buffer_21_0_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    distance_buffer_21_0_out_ap_vld : OUT STD_LOGIC;
    distance_buffer_20_0_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    distance_buffer_20_0_out_ap_vld : OUT STD_LOGIC;
    distance_buffer_19_0_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    distance_buffer_19_0_out_ap_vld : OUT STD_LOGIC;
    distance_buffer_18_0_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    distance_buffer_18_0_out_ap_vld : OUT STD_LOGIC;
    distance_buffer_17_0_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    distance_buffer_17_0_out_ap_vld : OUT STD_LOGIC;
    distance_buffer_16_0_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    distance_buffer_16_0_out_ap_vld : OUT STD_LOGIC;
    distance_buffer_15_0_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    distance_buffer_15_0_out_ap_vld : OUT STD_LOGIC;
    distance_buffer_14_0_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    distance_buffer_14_0_out_ap_vld : OUT STD_LOGIC;
    distance_buffer_13_0_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    distance_buffer_13_0_out_ap_vld : OUT STD_LOGIC;
    distance_buffer_12_0_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    distance_buffer_12_0_out_ap_vld : OUT STD_LOGIC;
    distance_buffer_11_0_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    distance_buffer_11_0_out_ap_vld : OUT STD_LOGIC;
    distance_buffer_10_0_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    distance_buffer_10_0_out_ap_vld : OUT STD_LOGIC;
    distance_buffer_9_0_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    distance_buffer_9_0_out_ap_vld : OUT STD_LOGIC;
    distance_buffer_8_0_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    distance_buffer_8_0_out_ap_vld : OUT STD_LOGIC;
    distance_buffer_7_0_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    distance_buffer_7_0_out_ap_vld : OUT STD_LOGIC;
    distance_buffer_6_0_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    distance_buffer_6_0_out_ap_vld : OUT STD_LOGIC;
    distance_buffer_5_0_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    distance_buffer_5_0_out_ap_vld : OUT STD_LOGIC;
    distance_buffer_4_0_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    distance_buffer_4_0_out_ap_vld : OUT STD_LOGIC;
    distance_buffer_3_0_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    distance_buffer_3_0_out_ap_vld : OUT STD_LOGIC;
    distance_buffer_2_0_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    distance_buffer_2_0_out_ap_vld : OUT STD_LOGIC;
    distance_buffer_1_0_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    distance_buffer_1_0_out_ap_vld : OUT STD_LOGIC;
    distance_buffer_0_0_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    distance_buffer_0_0_out_ap_vld : OUT STD_LOGIC );
end;


architecture behav of sssp_kernel_0_PE_kernel_Pipeline_init_distances is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv5_5 : STD_LOGIC_VECTOR (4 downto 0) := "00101";
    constant ap_const_lv5_6 : STD_LOGIC_VECTOR (4 downto 0) := "00110";
    constant ap_const_lv5_7 : STD_LOGIC_VECTOR (4 downto 0) := "00111";
    constant ap_const_lv5_8 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_const_lv5_9 : STD_LOGIC_VECTOR (4 downto 0) := "01001";
    constant ap_const_lv5_A : STD_LOGIC_VECTOR (4 downto 0) := "01010";
    constant ap_const_lv5_B : STD_LOGIC_VECTOR (4 downto 0) := "01011";
    constant ap_const_lv5_C : STD_LOGIC_VECTOR (4 downto 0) := "01100";
    constant ap_const_lv5_D : STD_LOGIC_VECTOR (4 downto 0) := "01101";
    constant ap_const_lv5_E : STD_LOGIC_VECTOR (4 downto 0) := "01110";
    constant ap_const_lv5_F : STD_LOGIC_VECTOR (4 downto 0) := "01111";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_11 : STD_LOGIC_VECTOR (4 downto 0) := "10001";
    constant ap_const_lv5_12 : STD_LOGIC_VECTOR (4 downto 0) := "10010";
    constant ap_const_lv5_13 : STD_LOGIC_VECTOR (4 downto 0) := "10011";
    constant ap_const_lv5_14 : STD_LOGIC_VECTOR (4 downto 0) := "10100";
    constant ap_const_lv5_15 : STD_LOGIC_VECTOR (4 downto 0) := "10101";
    constant ap_const_lv5_16 : STD_LOGIC_VECTOR (4 downto 0) := "10110";
    constant ap_const_lv5_17 : STD_LOGIC_VECTOR (4 downto 0) := "10111";
    constant ap_const_lv5_18 : STD_LOGIC_VECTOR (4 downto 0) := "11000";
    constant ap_const_lv5_19 : STD_LOGIC_VECTOR (4 downto 0) := "11001";
    constant ap_const_lv5_1A : STD_LOGIC_VECTOR (4 downto 0) := "11010";
    constant ap_const_lv5_1B : STD_LOGIC_VECTOR (4 downto 0) := "11011";
    constant ap_const_lv5_1C : STD_LOGIC_VECTOR (4 downto 0) := "11100";
    constant ap_const_lv5_1D : STD_LOGIC_VECTOR (4 downto 0) := "11101";
    constant ap_const_lv5_1E : STD_LOGIC_VECTOR (4 downto 0) := "11110";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv6_20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln25_fu_543_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln25_reg_1079 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln27_fu_570_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln27_reg_1088 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln27_reg_1088_pp0_iter1_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal local_in_a_load_reg_1092 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln27_2_fu_565_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal j_fu_160 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_j_2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln25_fu_549_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal distance_buffer_0_0_fu_164 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln27_fu_584_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal distance_buffer_1_0_fu_168 : STD_LOGIC_VECTOR (31 downto 0);
    signal distance_buffer_2_0_fu_172 : STD_LOGIC_VECTOR (31 downto 0);
    signal distance_buffer_3_0_fu_176 : STD_LOGIC_VECTOR (31 downto 0);
    signal distance_buffer_4_0_fu_180 : STD_LOGIC_VECTOR (31 downto 0);
    signal distance_buffer_5_0_fu_184 : STD_LOGIC_VECTOR (31 downto 0);
    signal distance_buffer_6_0_fu_188 : STD_LOGIC_VECTOR (31 downto 0);
    signal distance_buffer_7_0_fu_192 : STD_LOGIC_VECTOR (31 downto 0);
    signal distance_buffer_8_0_fu_196 : STD_LOGIC_VECTOR (31 downto 0);
    signal distance_buffer_9_0_fu_200 : STD_LOGIC_VECTOR (31 downto 0);
    signal distance_buffer_10_0_fu_204 : STD_LOGIC_VECTOR (31 downto 0);
    signal distance_buffer_11_0_fu_208 : STD_LOGIC_VECTOR (31 downto 0);
    signal distance_buffer_12_0_fu_212 : STD_LOGIC_VECTOR (31 downto 0);
    signal distance_buffer_13_0_fu_216 : STD_LOGIC_VECTOR (31 downto 0);
    signal distance_buffer_14_0_fu_220 : STD_LOGIC_VECTOR (31 downto 0);
    signal distance_buffer_15_0_fu_224 : STD_LOGIC_VECTOR (31 downto 0);
    signal distance_buffer_16_0_fu_228 : STD_LOGIC_VECTOR (31 downto 0);
    signal distance_buffer_17_0_fu_232 : STD_LOGIC_VECTOR (31 downto 0);
    signal distance_buffer_18_0_fu_236 : STD_LOGIC_VECTOR (31 downto 0);
    signal distance_buffer_19_0_fu_240 : STD_LOGIC_VECTOR (31 downto 0);
    signal distance_buffer_20_0_fu_244 : STD_LOGIC_VECTOR (31 downto 0);
    signal distance_buffer_21_0_fu_248 : STD_LOGIC_VECTOR (31 downto 0);
    signal distance_buffer_22_0_fu_252 : STD_LOGIC_VECTOR (31 downto 0);
    signal distance_buffer_23_0_fu_256 : STD_LOGIC_VECTOR (31 downto 0);
    signal distance_buffer_24_0_fu_260 : STD_LOGIC_VECTOR (31 downto 0);
    signal distance_buffer_25_0_fu_264 : STD_LOGIC_VECTOR (31 downto 0);
    signal distance_buffer_26_0_fu_268 : STD_LOGIC_VECTOR (31 downto 0);
    signal distance_buffer_27_0_fu_272 : STD_LOGIC_VECTOR (31 downto 0);
    signal distance_buffer_28_0_fu_276 : STD_LOGIC_VECTOR (31 downto 0);
    signal distance_buffer_29_0_fu_280 : STD_LOGIC_VECTOR (31 downto 0);
    signal distance_buffer_30_0_fu_284 : STD_LOGIC_VECTOR (31 downto 0);
    signal distance_buffer_31_0_fu_288 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal zext_ln27_1_fu_555_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln27_fu_559_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal distance_buffer_1_fu_579_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component sssp_kernel_0_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component sssp_kernel_0_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    j_fu_160_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln25_fu_543_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    j_fu_160 <= add_ln25_fu_549_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    j_fu_160 <= ap_const_lv6_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                icmp_ln25_reg_1079 <= icmp_ln25_fu_543_p2;
                local_in_a_load_reg_1092 <= local_in_a_q0;
                trunc_ln27_reg_1088_pp0_iter1_reg <= trunc_ln27_reg_1088;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln27_reg_1088_pp0_iter1_reg = ap_const_lv5_0))) then
                distance_buffer_0_0_fu_164 <= select_ln27_fu_584_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln27_reg_1088_pp0_iter1_reg = ap_const_lv5_A))) then
                distance_buffer_10_0_fu_204 <= select_ln27_fu_584_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln27_reg_1088_pp0_iter1_reg = ap_const_lv5_B))) then
                distance_buffer_11_0_fu_208 <= select_ln27_fu_584_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln27_reg_1088_pp0_iter1_reg = ap_const_lv5_C))) then
                distance_buffer_12_0_fu_212 <= select_ln27_fu_584_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln27_reg_1088_pp0_iter1_reg = ap_const_lv5_D))) then
                distance_buffer_13_0_fu_216 <= select_ln27_fu_584_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln27_reg_1088_pp0_iter1_reg = ap_const_lv5_E))) then
                distance_buffer_14_0_fu_220 <= select_ln27_fu_584_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln27_reg_1088_pp0_iter1_reg = ap_const_lv5_F))) then
                distance_buffer_15_0_fu_224 <= select_ln27_fu_584_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln27_reg_1088_pp0_iter1_reg = ap_const_lv5_10))) then
                distance_buffer_16_0_fu_228 <= select_ln27_fu_584_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln27_reg_1088_pp0_iter1_reg = ap_const_lv5_11))) then
                distance_buffer_17_0_fu_232 <= select_ln27_fu_584_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln27_reg_1088_pp0_iter1_reg = ap_const_lv5_12))) then
                distance_buffer_18_0_fu_236 <= select_ln27_fu_584_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln27_reg_1088_pp0_iter1_reg = ap_const_lv5_13))) then
                distance_buffer_19_0_fu_240 <= select_ln27_fu_584_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln27_reg_1088_pp0_iter1_reg = ap_const_lv5_1))) then
                distance_buffer_1_0_fu_168 <= select_ln27_fu_584_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln27_reg_1088_pp0_iter1_reg = ap_const_lv5_14))) then
                distance_buffer_20_0_fu_244 <= select_ln27_fu_584_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln27_reg_1088_pp0_iter1_reg = ap_const_lv5_15))) then
                distance_buffer_21_0_fu_248 <= select_ln27_fu_584_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln27_reg_1088_pp0_iter1_reg = ap_const_lv5_16))) then
                distance_buffer_22_0_fu_252 <= select_ln27_fu_584_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln27_reg_1088_pp0_iter1_reg = ap_const_lv5_17))) then
                distance_buffer_23_0_fu_256 <= select_ln27_fu_584_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln27_reg_1088_pp0_iter1_reg = ap_const_lv5_18))) then
                distance_buffer_24_0_fu_260 <= select_ln27_fu_584_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln27_reg_1088_pp0_iter1_reg = ap_const_lv5_19))) then
                distance_buffer_25_0_fu_264 <= select_ln27_fu_584_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln27_reg_1088_pp0_iter1_reg = ap_const_lv5_1A))) then
                distance_buffer_26_0_fu_268 <= select_ln27_fu_584_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln27_reg_1088_pp0_iter1_reg = ap_const_lv5_1B))) then
                distance_buffer_27_0_fu_272 <= select_ln27_fu_584_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln27_reg_1088_pp0_iter1_reg = ap_const_lv5_1C))) then
                distance_buffer_28_0_fu_276 <= select_ln27_fu_584_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln27_reg_1088_pp0_iter1_reg = ap_const_lv5_1D))) then
                distance_buffer_29_0_fu_280 <= select_ln27_fu_584_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln27_reg_1088_pp0_iter1_reg = ap_const_lv5_2))) then
                distance_buffer_2_0_fu_172 <= select_ln27_fu_584_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln27_reg_1088_pp0_iter1_reg = ap_const_lv5_1E))) then
                distance_buffer_30_0_fu_284 <= select_ln27_fu_584_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln27_reg_1088_pp0_iter1_reg = ap_const_lv5_1F))) then
                distance_buffer_31_0_fu_288 <= select_ln27_fu_584_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln27_reg_1088_pp0_iter1_reg = ap_const_lv5_3))) then
                distance_buffer_3_0_fu_176 <= select_ln27_fu_584_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln27_reg_1088_pp0_iter1_reg = ap_const_lv5_4))) then
                distance_buffer_4_0_fu_180 <= select_ln27_fu_584_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln27_reg_1088_pp0_iter1_reg = ap_const_lv5_5))) then
                distance_buffer_5_0_fu_184 <= select_ln27_fu_584_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln27_reg_1088_pp0_iter1_reg = ap_const_lv5_6))) then
                distance_buffer_6_0_fu_188 <= select_ln27_fu_584_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln27_reg_1088_pp0_iter1_reg = ap_const_lv5_7))) then
                distance_buffer_7_0_fu_192 <= select_ln27_fu_584_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln27_reg_1088_pp0_iter1_reg = ap_const_lv5_8))) then
                distance_buffer_8_0_fu_196 <= select_ln27_fu_584_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln27_reg_1088_pp0_iter1_reg = ap_const_lv5_9))) then
                distance_buffer_9_0_fu_200 <= select_ln27_fu_584_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln25_fu_543_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                trunc_ln27_reg_1088 <= trunc_ln27_fu_570_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln25_fu_549_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_j_2) + unsigned(ap_const_lv6_1));
    add_ln27_fu_559_p2 <= std_logic_vector(unsigned(zext_ln27) + unsigned(zext_ln27_1_fu_555_p1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln25_fu_543_p2)
    begin
        if (((icmp_ln25_fu_543_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_j_2_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, j_fu_160, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_j_2 <= ap_const_lv6_0;
        else 
            ap_sig_allocacmp_j_2 <= j_fu_160;
        end if; 
    end process;

    distance_buffer_0_0_out <= distance_buffer_0_0_fu_164;

    distance_buffer_0_0_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln25_reg_1079)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln25_reg_1079 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            distance_buffer_0_0_out_ap_vld <= ap_const_logic_1;
        else 
            distance_buffer_0_0_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    distance_buffer_10_0_out <= distance_buffer_10_0_fu_204;

    distance_buffer_10_0_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln25_reg_1079)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln25_reg_1079 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            distance_buffer_10_0_out_ap_vld <= ap_const_logic_1;
        else 
            distance_buffer_10_0_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    distance_buffer_11_0_out <= distance_buffer_11_0_fu_208;

    distance_buffer_11_0_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln25_reg_1079)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln25_reg_1079 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            distance_buffer_11_0_out_ap_vld <= ap_const_logic_1;
        else 
            distance_buffer_11_0_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    distance_buffer_12_0_out <= distance_buffer_12_0_fu_212;

    distance_buffer_12_0_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln25_reg_1079)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln25_reg_1079 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            distance_buffer_12_0_out_ap_vld <= ap_const_logic_1;
        else 
            distance_buffer_12_0_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    distance_buffer_13_0_out <= distance_buffer_13_0_fu_216;

    distance_buffer_13_0_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln25_reg_1079)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln25_reg_1079 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            distance_buffer_13_0_out_ap_vld <= ap_const_logic_1;
        else 
            distance_buffer_13_0_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    distance_buffer_14_0_out <= distance_buffer_14_0_fu_220;

    distance_buffer_14_0_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln25_reg_1079)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln25_reg_1079 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            distance_buffer_14_0_out_ap_vld <= ap_const_logic_1;
        else 
            distance_buffer_14_0_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    distance_buffer_15_0_out <= distance_buffer_15_0_fu_224;

    distance_buffer_15_0_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln25_reg_1079)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln25_reg_1079 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            distance_buffer_15_0_out_ap_vld <= ap_const_logic_1;
        else 
            distance_buffer_15_0_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    distance_buffer_16_0_out <= distance_buffer_16_0_fu_228;

    distance_buffer_16_0_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln25_reg_1079)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln25_reg_1079 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            distance_buffer_16_0_out_ap_vld <= ap_const_logic_1;
        else 
            distance_buffer_16_0_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    distance_buffer_17_0_out <= distance_buffer_17_0_fu_232;

    distance_buffer_17_0_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln25_reg_1079)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln25_reg_1079 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            distance_buffer_17_0_out_ap_vld <= ap_const_logic_1;
        else 
            distance_buffer_17_0_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    distance_buffer_18_0_out <= distance_buffer_18_0_fu_236;

    distance_buffer_18_0_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln25_reg_1079)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln25_reg_1079 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            distance_buffer_18_0_out_ap_vld <= ap_const_logic_1;
        else 
            distance_buffer_18_0_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    distance_buffer_19_0_out <= distance_buffer_19_0_fu_240;

    distance_buffer_19_0_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln25_reg_1079)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln25_reg_1079 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            distance_buffer_19_0_out_ap_vld <= ap_const_logic_1;
        else 
            distance_buffer_19_0_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    distance_buffer_1_0_out <= distance_buffer_1_0_fu_168;

    distance_buffer_1_0_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln25_reg_1079)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln25_reg_1079 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            distance_buffer_1_0_out_ap_vld <= ap_const_logic_1;
        else 
            distance_buffer_1_0_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    distance_buffer_1_fu_579_p2 <= "0" when (local_in_a_load_reg_1092 = ap_const_lv32_0) else "1";
    distance_buffer_20_0_out <= distance_buffer_20_0_fu_244;

    distance_buffer_20_0_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln25_reg_1079)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln25_reg_1079 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            distance_buffer_20_0_out_ap_vld <= ap_const_logic_1;
        else 
            distance_buffer_20_0_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    distance_buffer_21_0_out <= distance_buffer_21_0_fu_248;

    distance_buffer_21_0_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln25_reg_1079)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln25_reg_1079 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            distance_buffer_21_0_out_ap_vld <= ap_const_logic_1;
        else 
            distance_buffer_21_0_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    distance_buffer_22_0_out <= distance_buffer_22_0_fu_252;

    distance_buffer_22_0_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln25_reg_1079)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln25_reg_1079 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            distance_buffer_22_0_out_ap_vld <= ap_const_logic_1;
        else 
            distance_buffer_22_0_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    distance_buffer_23_0_out <= distance_buffer_23_0_fu_256;

    distance_buffer_23_0_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln25_reg_1079)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln25_reg_1079 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            distance_buffer_23_0_out_ap_vld <= ap_const_logic_1;
        else 
            distance_buffer_23_0_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    distance_buffer_24_0_out <= distance_buffer_24_0_fu_260;

    distance_buffer_24_0_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln25_reg_1079)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln25_reg_1079 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            distance_buffer_24_0_out_ap_vld <= ap_const_logic_1;
        else 
            distance_buffer_24_0_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    distance_buffer_25_0_out <= distance_buffer_25_0_fu_264;

    distance_buffer_25_0_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln25_reg_1079)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln25_reg_1079 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            distance_buffer_25_0_out_ap_vld <= ap_const_logic_1;
        else 
            distance_buffer_25_0_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    distance_buffer_26_0_out <= distance_buffer_26_0_fu_268;

    distance_buffer_26_0_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln25_reg_1079)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln25_reg_1079 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            distance_buffer_26_0_out_ap_vld <= ap_const_logic_1;
        else 
            distance_buffer_26_0_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    distance_buffer_27_0_out <= distance_buffer_27_0_fu_272;

    distance_buffer_27_0_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln25_reg_1079)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln25_reg_1079 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            distance_buffer_27_0_out_ap_vld <= ap_const_logic_1;
        else 
            distance_buffer_27_0_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    distance_buffer_28_0_out <= distance_buffer_28_0_fu_276;

    distance_buffer_28_0_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln25_reg_1079)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln25_reg_1079 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            distance_buffer_28_0_out_ap_vld <= ap_const_logic_1;
        else 
            distance_buffer_28_0_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    distance_buffer_29_0_out <= distance_buffer_29_0_fu_280;

    distance_buffer_29_0_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln25_reg_1079)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln25_reg_1079 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            distance_buffer_29_0_out_ap_vld <= ap_const_logic_1;
        else 
            distance_buffer_29_0_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    distance_buffer_2_0_out <= distance_buffer_2_0_fu_172;

    distance_buffer_2_0_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln25_reg_1079)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln25_reg_1079 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            distance_buffer_2_0_out_ap_vld <= ap_const_logic_1;
        else 
            distance_buffer_2_0_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    distance_buffer_30_0_out <= distance_buffer_30_0_fu_284;

    distance_buffer_30_0_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln25_reg_1079)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln25_reg_1079 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            distance_buffer_30_0_out_ap_vld <= ap_const_logic_1;
        else 
            distance_buffer_30_0_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    distance_buffer_31_0_out <= distance_buffer_31_0_fu_288;

    distance_buffer_31_0_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln25_reg_1079)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln25_reg_1079 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            distance_buffer_31_0_out_ap_vld <= ap_const_logic_1;
        else 
            distance_buffer_31_0_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    distance_buffer_3_0_out <= distance_buffer_3_0_fu_176;

    distance_buffer_3_0_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln25_reg_1079)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln25_reg_1079 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            distance_buffer_3_0_out_ap_vld <= ap_const_logic_1;
        else 
            distance_buffer_3_0_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    distance_buffer_4_0_out <= distance_buffer_4_0_fu_180;

    distance_buffer_4_0_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln25_reg_1079)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln25_reg_1079 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            distance_buffer_4_0_out_ap_vld <= ap_const_logic_1;
        else 
            distance_buffer_4_0_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    distance_buffer_5_0_out <= distance_buffer_5_0_fu_184;

    distance_buffer_5_0_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln25_reg_1079)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln25_reg_1079 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            distance_buffer_5_0_out_ap_vld <= ap_const_logic_1;
        else 
            distance_buffer_5_0_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    distance_buffer_6_0_out <= distance_buffer_6_0_fu_188;

    distance_buffer_6_0_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln25_reg_1079)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln25_reg_1079 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            distance_buffer_6_0_out_ap_vld <= ap_const_logic_1;
        else 
            distance_buffer_6_0_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    distance_buffer_7_0_out <= distance_buffer_7_0_fu_192;

    distance_buffer_7_0_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln25_reg_1079)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln25_reg_1079 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            distance_buffer_7_0_out_ap_vld <= ap_const_logic_1;
        else 
            distance_buffer_7_0_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    distance_buffer_8_0_out <= distance_buffer_8_0_fu_196;

    distance_buffer_8_0_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln25_reg_1079)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln25_reg_1079 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            distance_buffer_8_0_out_ap_vld <= ap_const_logic_1;
        else 
            distance_buffer_8_0_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    distance_buffer_9_0_out <= distance_buffer_9_0_fu_200;

    distance_buffer_9_0_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln25_reg_1079)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln25_reg_1079 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            distance_buffer_9_0_out_ap_vld <= ap_const_logic_1;
        else 
            distance_buffer_9_0_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln25_fu_543_p2 <= "1" when (ap_sig_allocacmp_j_2 = ap_const_lv6_20) else "0";
    local_in_a_address0 <= zext_ln27_2_fu_565_p1(12 - 1 downto 0);

    local_in_a_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            local_in_a_ce0 <= ap_const_logic_1;
        else 
            local_in_a_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    select_ln27_fu_584_p3 <= 
        ap_const_lv32_FFFFFFFF when (distance_buffer_1_fu_579_p2(0) = '1') else 
        ap_const_lv32_0;
    trunc_ln27_fu_570_p1 <= ap_sig_allocacmp_j_2(5 - 1 downto 0);
    zext_ln27_1_fu_555_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_j_2),12));
    zext_ln27_2_fu_565_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln27_fu_559_p2),64));
end behav;
